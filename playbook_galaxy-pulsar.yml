- name: Install HTCondor Central Manager on Pulsar
  hosts: pulsar

  vars_files:
    - secret_group_vars/pulsar.yml
    - group_vars/pulsar.yml

  handlers:
    - name: restart pulsar
      become: yes
      ansible.builtin.service:
        name: pulsar
        enabled: yes
        state: restarted

  pre_tasks:
    - name: Remove previous Install
      become: yes
      apt:
        name: "{{ item }}"
        purge: yes
        state: absent
        autoremove: yes
        autoclean: yes
      loop:
        - htcondor
        - condor
    
    - name: Install dependencies
      become: true
      apt:
        name: "{{ item }}"
        update_cache: yes
        cache_valid_time: 3600
        state: present
      loop:
        - git
        - virtualenv
        - python3
        - python3-venv
        - libcurl4-openssl-dev 
        - libssl-dev
        - python3-dev
        - build-essential 
        - gcc 
        - firewalld
        - autofs

    - name: Create Pulsar user
      user:
        name: pulsar
        state: present
        home: /opt/pulsar
        move_home: true

    # - name : Remove repository HTCondor 
    #   become: yes
    #   shell:
    #     cmd: rm -r /etc/
    # - name: Create share repository
    #   become: true
    #   become_user: root
    #   file:
    #     path: /data/share
    #     state: directory
    #     owner: root
    #     group: root
    #     mode: '0644'

  roles:
    - role: galaxyproject.cvmfs
      become: yes
    - name: galaxyproject.pulsar
    - name: usegalaxy_eu.htcondor
      vars:
        condor_role: central-manager
        condor_copy_template: false
    - usegalaxy-eu.bashrc

  tasks:
    - name: import cron tasks
      include_tasks: cron.yml

    - name: import scripts tasks
      import_tasks: scripts.yml
      become: yes

    - name: import metrics tasks
      import_tasks: metrics.yml
      become: yes

    - name: Create container image cache path
      file:
        path: "{{ pulsar_container_image_cache_path }}"
        state: directory
        mode: '0775'
        owner: pulsar
        group: pulsar 
      become: yes

    - name: Copy Pulsar application configuration file
      ansible.builtin.template:
        src: "templates/app.yml.j2"
        dest: "{{ pulsar_root }}/config/app.yml"
        force: yes
        backup: yes
        mode: 0700
        owner: pulsar
        group: pulsar
      notify: restart pulsar
      become: yes

  post_tasks:
    - name: Creating condor config with content
      copy:
        dest: /etc/condor/condor_config.local
        content: |
          ALLOW_WRITE = *
          ALLOW_READ = $(ALLOW_WRITE)
          ALLOW_NEGOTIATOR = $(ALLOW_WRITE)
          DAEMON_LIST = COLLECTOR, MASTER, NEGOTIATOR, SCHEDD
          FILESYSTEM_DOMAIN = vgcn
          UID_DOMAIN = vgcn
          TRUST_UID_DOMAIN = True
          SOFT_UID_DOMAIN = True
        owner: root
        group: root
    
    # - name: Create auto.master.d repository 
    #   file:
    #     path: /etc/auto.master.d/
    #     state: directory
    #     owner: root
    #     group: root
    #     mode: '0644'

    - name: Creating condor config with content
      copy:
        dest: /etc/auto.master.d/data.autofs
        content: |
          /data           /etc/auto.data          nfsvers=3
        owner: root
        group: root
        mode: '0644'

    - name: Creating condor config with content
      copy:
        dest: /etc/auto.data
        content: |
            share  -rw,hard,intr,nosuid,quota  {{ inventory_hostname }}:/data/share   
        owner: root
        group: root
        mode: '0644'

    - name: Creating condor config with content
      copy:
        dest: /etc.intra-vgcn-key.ssh_config
        content: |
          Host *
              GSSAPIAuthentication yes
            ForwardX11Trusted yes
            SendEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
              SendEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
              SendEnv LC_IDENTIFICATION LC_ALL LANGUAGE
              SendEnv XMODIFIERS
              StrictHostKeyChecking no
              UserKnownHostsFile=/dev/null
        owner: root
        group: root
        mode: '0644'

    - name: Add 2049/tcp permanent 
      firewalld:
        port: 2049/tcp
        permanent: true
        state: enabled
    
    - name: Always reload firewalld
      service:
        name: firewalld
        state: reloaded


    